/******************************************************************
Site Name:
Author:

Stylesheet: Button Styles

Buttons are a pretty important part of your site's style, so it's
important to have a consistent baseline for them. Use this stylesheet
to create all kinds of buttons.

Helpful Links:
http://galp.in/blog/2011/08/02/the-ui-guide-part-1-buttons/

******************************************************************/

/*********************
BUTTON DEFAULTS
We're gonna use a placeholder selector here
so we can use common styles. We then use this
to load up the defaults in all our buttons.

Here's a quick video to show how it works:
http://www.youtube.com/watch?v=hwdVpKiJzac

*********************/

%btn {
	font-family:$lato;
	display:inline-block;
	font-weight:bold;
	text-transform:uppercase;
	text-decoration:none;
	letter-spacing:2px;
	color:#eee;
	background:rgba(255,255,255,.2);
	font-size:20px;
	height:40px;
	line-height:40px;
	padding:0 12px;
	border:0;
	cursor:pointer;
	outline:none;
	@include border-radius(3px);
	@include transition(background-color 0.15s ease-in-out);

	// hovering on the btn
	&:hover, &:focus {
		color: $white;
		text-decoration: none;
		background:rgba(255,255,255,.25);
	} // end hover

	/* // clicking on the button
	&:active {
		top: 1px; // adds a tiny hop to the click
	} // end active */

} // end .button

%btn-close {
	@extend %btn;
	text-indent:-9999px;
	width:40px;
	position:relative;
	@include box-sizing;
	&:before, &:after {
		content:"";
		position:absolute;
		left:9px;
		top:19px;
		background:#eee;
		@include border-radius(1px);
		display:block;
		height:3px;
		margin-bottom:3px;
		@include transition(all 275ms);
		width:22px;
		@include transform(rotate(-45deg));
	}
	&:after {
		@include transform(rotate(45deg));
	}
	&:hover {
		&:before, &:after {
			background:$white;
		}
	}
}
%btn-tri {
	&:after {
		content:"";
		display:block;
	}
}
%btn-tri-horiz {
	@extend %btn-tri;
	&:after {
		border-top:12px solid transparent;
		border-bottom:12px solid transparent;
	}
}
%btn-tri-left {
	@extend %btn-tri-horiz;
	&:after {
		border-right:24px solid $white;
	}
}
%btn-tri-right {
	@extend %btn-tri-horiz;
	&:after {
		border-left:24px solid $white;
	}
}

%btn-play {
	position:relative;
	outline:none;
	&:before, &:after {
		content:"";
		display:block;
		position:absolute;
		left:0;
		top:0;
	}
	&:before {
		border:4px solid #fff;
		@include border-radius(50%);
		width:45px;
		height:45px;
		box-shadow:0 5px 15px $black;
		background-color:rgba(0,0,0,.4);
	}
	@extend %btn-tri-right;
	&:after {
		@include transform(translate(18px,14px));
	}
}
/*
An example button.
You can use this example if you want. Just replace all the variables
and it will create a button dependant on those variables.
*/
.blue-btn {
  @extend %btn; // here we load the btn defaults
  background-color: $blue;

  &:hover,
  &:focus {
    background-color: darken($blue, 4%);
  } // end hover

  &:active {
    background-color: darken($blue, 5%);
  } // end active

} // end blue button
