/******************************************************************
Site Name:
Author:

Stylesheet: Mixins Stylesheet

This is where you can take advantage of Sass' great features: Mixins.
I won't go in-depth on how they work exactly,
there are a few articles below that will help do that. What I will
tell you is that this will help speed up simple changes like
changing a color or adding CSS3 techniques gradients.

A WORD OF WARNING: It's very easy to overdo it here. Be careful and
remember less is more.

Helpful:
http://sachagreif.com/useful-sass-mixins/
http://thesassway.com/intermediate/leveraging-sass-mixins-for-cleaner-code
http://web-design-weekly.com/blog/2013/05/12/handy-sass-mixins/

******************************************************************/


/*********************
TRANSITION
*********************/

/*
I totally rewrote this to be cleaner and easier to use.
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/

// defining prefixes so we can use them in mixins below
$prefixes: ("-webkit-", "-moz-", "-ms-", "-o-",  "");

@mixin transition($transition...) {
	@each $prefix in $prefixes {
		#{$prefix}transition: $transition;
	}
}

@mixin transform($transform...) {
	@each $prefix in $prefixes {
		#{$prefix}transform: $transform;
	}
}

@mixin transition-delay($transition-delay...) {
	@each $prefix in $prefixes {
		#{$prefix}transition-delay: $transition-delay;
	}
}

@mixin v-center {
	@each $prefix in $prefixes {
		@include transform(translateY(-50%));
	}
	position:relative;
	top:50%;
}

/*********************
CSS3 GRADIENTS
Be careful with these since they can
really slow down your CSS. Don't overdo it.
*********************/

/* @include css-gradient(#dfdfdf,#f8f8f8); */
@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8, $vstart:"", $vend:"", $hstart:"", $hend:"" ) {
	background-color: $to;
	background-image: -webkit-gradient(linear, unquote($hstart) unquote($vstart), unquote($hstart) unquote($vend), from($from), to($to));
	background-image: -webkit-linear-gradient(unquote($hstart) unquote($vstart), $from, $to);
	background-image: -moz-linear-gradient(unquote($hstart) unquote($vstart), $from, $to);
	background-image: -o-linear-gradient(unquote($hstart) unquote($vstart), $from, $to);
	background-image: linear-gradient(to unquote($hend) unquote($vend), $from, $to);
}
@mixin css-gradient-3($color, $color1, $loc1, $color2, $loc2, $color3, $loc3, $startLoc:top) {
	background:-webkit-linear-gradient($startLoc, $color1 $loc1, $color2 $loc2, $color3 $loc3);
	background:-moz-linear-gradient($startLoc, $color1 $loc1, $color2 $loc2, $color3 $loc3);
	background:-ms-linear-gradient($startLoc, $color1 $loc1, $color2 $loc2, $color3 $loc3);
	background:-o-linear-gradient($startLoc, $color1 $loc1, $color2 $loc2, $color3 $loc3);
	background:linear-gradient($startLoc, $color1 $loc1, $color2 $loc2, $color3 $loc3);
	background-color:$color;
	background-repeat:no-repeat;
}

/*********************
BOX SIZING
*********************/

/* @include box-sizing(border-box); */
/* NOTE: value of "padding-box" is only supported in Gecko. So
probably best not to use it. I mean, were you going to anyway? */
@mixin box-sizing($type: border-box) {
	@each $prefix in $prefixes {
		#{$prefix}box-sizing: $type;
	}
}

@mixin border-radius($radius:5px) {
	@each $prefix in $prefixes {
		#{$prefix}border-radius: $radius;
	}
}

@mixin columns($args) {
	@each $prefix in $prefixes {
		#{$prefix}columns: $args;
	}
}

@mixin column-gap($args) {
	@each $prefix in $prefixes {
		#{$prefix}column-gap: $args;
	}
}

@mixin clearfix {
	content:".";
	height:0;
	display:block;
	visibility:hidden;
	clear:both;
}

// triangles
@mixin tri($direction, $girth, $length, $color, $margin:0, $display:inline-block, $float:none) {
	&:after {
		content:"";
		width:0;
		height:0;
		display:$display;
		float:$float;
		margin:$margin;
		@if $direction == 'left' or $direction =='right' {
		border-top:$girth solid transparent;
		border-bottom:$girth solid transparent;
		} @else {
			border-left:$girth solid transparent;
			border-right:$girth solid transparent;
		}
		@include v-center;
		@if $direction == 'left' {
			border-right:$length solid $color;
		} @else if  $direction == 'right' {
			border-left:$length solid $color;
		} @else if  $direction == 'top' {
			border-bottom:$length solid $color;
		} @else {
			border-top:$length solid $color;
		}
	}
}

